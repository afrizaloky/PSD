$date
	Wed Nov 11 21:32:11 2020
$end
$version
	Icarus Verilog
$end
$timescale
	1ns
$end
$scope module tb $end
$var wire 8 ! out [7:0] $end
$var reg 3 " w [2:0] $end
$scope module dec $end
$var wire 3 # w [2:0] $end
$var wire 8 $ out [7:0] $end
$scope module dec0 $end
$var wire 1 % EN $end
$var wire 2 & w [1:0] $end
$var reg 4 ' out [3:0] $end
$upscope $end
$scope module dec1 $end
$var wire 1 ( EN $end
$var wire 2 ) w [1:0] $end
$var reg 4 * out [3:0] $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
bx *
bx )
x(
bx '
bx &
x%
bx $
bx #
bx "
bx !
$end
#10
b1 '
1%
b1 !
b1 $
b0 *
b0 &
b0 )
0(
b0 "
b0 #
#20
b10 !
b10 $
b10 '
b1 &
b1 )
b1 "
b1 #
#30
b100 !
b100 $
b100 '
b10 &
b10 )
b10 "
b10 #
#40
b1000 !
b1000 $
b1000 '
b11 &
b11 )
b11 "
b11 #
#50
b0 '
0%
b10000 !
b10000 $
b1 *
b0 &
b0 )
1(
b100 "
b100 #
#60
b100000 !
b100000 $
b10 *
b1 &
b1 )
b101 "
b101 #
#70
b1000000 !
b1000000 $
b100 *
b10 &
b10 )
b110 "
b110 #
#80
b10000000 !
b10000000 $
b1000 *
b11 &
b11 )
b111 "
b111 #
#100
